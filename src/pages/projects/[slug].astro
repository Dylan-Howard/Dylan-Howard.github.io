---
import Typography from "@components/Typography.astro";
import { getCollection } from "astro:content";

import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

const { project } = Astro.props;
const { Content } = await project.render(); // Render the Markdown content
---

<Layout title={project.data.title}>
  <article
    aria-label={project.data.title}
    class="page"
    transition:name={`${project.slug}-container`}
  >
    {
      project.data.image && (
        <img
          src={project.data.image.src}
          alt={project.data.image.alt}
          transition:name={`${project.slug}-img`}
        />
      )
    }
    <Typography
      component="h1"
      size="large"
      variant="title"
      bottomGutter="small"
      transitionName={`${project.slug}-title`}
    >
      {project.data.title}
    </Typography>
    <Typography size="large" variant="body" transitionName={`${project.slug}-description`}>{project.data.description}</Typography>

    <ul>
      {project.data.tags.map((tag) => <li>{tag}</li>)}
    </ul>

    {
      project.data.link && (
        <a href={project.data.link} target="_blank" rel="noopener noreferrer">
          View Project
        </a>
      )
    }

    <div class="content">
      <slot />
      {
        /* This is where the Markdown/MDX content of the project will be rendered */
      }
      <Content />
    </div>
  </article>
</Layout>

<style>
  .content {
    margin-top: 2rem;
  }
  .page {
    box-sizing: content-box;
    border-radius: var(--dlh-theme-shape-corner-medium);
    background: var(--dlh-theme-color-surface-container);
    padding: 0 var(--dlh-theme-shape-margin-large);
  }
</style>


<!-- components={{
  h1: (props: object) => (
    <Typography
      component="h1"
      size="large"
      variant="title"
      bottomGutter="medium"
      {...props}
    />
  ),
  h2: (props: object) => (
    <Typography
      component="h2"
      size="medium"
      variant="title"
      bottomGutter="medium"
      {...props}
    />
  ),
  h3: (props: object) => (
    <Typography
      component="h3"
      size="small"
      variant="title"
      bottomGutter="medium"
      {...props}
    />
  ),
  p: (props: object) => (
    <Typography
      bottomGutter="medium"
      {...props}
    />
  ),
  // ul: (props) => <ul class="list-disc list-inside" {...props} />,
  // ol: (props) => <ol class="list-decimal list-inside" {...props} />,
  // Add more mappings for other Markdown elements as needed
}}
/> -->